// vars
// * breakpointsMaxW
$bp-container: 1350px;
$bp-991: 991.98px;
$bp-768: 767.98px;
$bp-576: 576px;
$bp-360: 359.98px;
$bp-fullPage: 1950px;
$bp-1100: 1100.98px;
$bp-1500: 1500.98px;

// *=== Fonts
$DINProCond: "GPN_DINWebCondensedBold";
$Inter: "Inter", sans-serif;

//mixins
@mixin breakpointsMaxW($bp) {
    @media (max-width: $bp) {
        @content;
    }
}

@mixin breakpointsMinW($bp) {
    @media (min-width: $bp) {
        @content;
    }
}

@mixin breakpointsMaxH($bp) {
    @media (max-height: $bp) and (orientation: landscape) {
        @content;
    }
}

@mixin afterIcon($image, $w, $h) {
    background-image: $image;
    width: $w;
    height: $h;
}

@mixin background($size) {
    background: {
        repeat: no-repeat;
        position: center;
        size: $size;
    }
}

@mixin img($size) {
    width: 100%;
    height: 100%;
    object-fit: $size;
}

@mixin backgroundImage($image, $size) {
    background: {
        image: $image;
        repeat: no-repeat;
        position: center;
        size: $size;
    }
}

@mixin maskImage($image, $size) {
    mask: $image no-repeat center/$size;
}

@mixin elDef() {
    position: absolute;
    content: "";
}

@mixin line-clamp($lines: 1) {
    @if $lines <=1 {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    @else {
        overflow: hidden;
        text-overflow: ellipsis;
        display: -webkit-box;
        -webkit-line-clamp: $lines;
        -webkit-box-orient: vertical;
    }
}

$maxWidth: 1920;
$maxWidthContainer: 1350;

@mixin adaptive-value($property, $starSize, $minSize, $type) {
    $addSize: $starSize - $minSize;

    @if $type==1 {
        #{$property}: $starSize + px;

        @media (max-width: #{$maxWidthContainer + px}) {
            #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 360px) / #{$maxWidthContainer - 360}));
        }
    }

    @else if $type==2 {
        #{$property}: $starSize + px;

        @media (min-width: #{$maxWidthContainer + px}) {
            #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 360px) / #{$maxWidth - 360}));
        }
    }

    @else {
        #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 360px) / #{$maxWidth - 360}));
    }
}

// right: max(15px, calc((100% - 1400px) / 2));

@mixin fz48() {
    @include adaptive-value("font-size", 48, 24, 1);
    line-height: 1.2;
    color: var(--color-black);
    text-transform: uppercase;
    font-family: $DINProCond;
}

//  margin-bottom: calc(28px + (36 - 28) * ((100vw - 320px) / (1350 - 320)));

//fonts
@font-face {
    font-family: "Inter";
    src: url("../../public/fonts/Inter-Regular.woff") format("woff2"),
        url("../../public/fonts/Inter-Regular.woff") format("woff");
    font-weight: normal;
    font-style: normal;
    font-display: swap;
}

@font-face {
    font-family: "Inter";
    src: url("../../public/fonts/Inter-Bold.woff2") format("woff2"),
        url("../../public/fonts/Inter-Bold.woff") format("woff");
    font-weight: bold;
    font-style: normal;
    font-display: swap;
}

@font-face {
    font-family: "Inter";
    src: url("../../public/fonts/Inter-Medium.woff2") format("woff2"),
        url("../../public/fonts/Inter-Medium.woff") format("woff");
    font-weight: 500;
    font-style: normal;
    font-display: swap;
}

@font-face {
    font-family: "DIN Pro Cond";
    src: url("../../public/fonts/DINPro-CondensedBold.woff2") format("woff2"),
        url("../../public/fonts/DINPro-CondensedBold.woff") format("woff");
    font-weight: bold;
    font-style: normal;
    font-display: swap;
}

//global
// body {
//     font-family: "Inter";
//     font-weight: 400;
//     font-size: 16px;
//     line-height: 1.5;
//     color: var(--color-black);
//     position: relative;
//     overflow-x: hidden;

//     @include breakpointsMaxW($bp-768) {
//         font-size: 15px;
//     }

//     &.no-scroll {
//         overflow: hidden;
//     }
// }


.container {
    max-width: $bp-container;
    padding: 0px 15px;
    margin: 0 auto;

    &__fluid {
        max-width: 1950px;
        padding: 0px 60px;

        @include breakpointsMaxW($bp-container) {
            padding: 0 15px;
        }
    }
}

.visually-hidden {
    position: absolute;
    clip: rect(0 0 0 0);
    width: 1px;
    height: 1px;
    margin: -1px;
}

.main {
    &--mt {
        margin-top: 230px;

        @include breakpointsMaxW($bp-991) {
            margin-top: 75px;
        }
    }
}


.overlay {
    position: absolute;
    top: 0;
    left: 0;
    opacity: 0;
    visibility: hidden;
    z-index: 10;
    width: 100%;
    height: 100vh;
    background-color: rgba(0, 0, 0, 0.25);
    backdrop-filter: blur(5px);
    transition: 200ms ease-in;

    &.active {
        opacity: 1;
        visibility: visible;
        //transition-delay: 550ms ease;
    }
}

.logo {
    width: 125px;
    height: 35px;
    display: block;
    transition: 200ms ease;

    &:hover {
        opacity: 0.8;
    }

    @include breakpointsMaxW($bp-991) {
        width: 150px;
        height: 40px;
    }

    img {
        @include img(contain);
    }
}

// * Кнопки
.btn {
    display: inline-block;
    //background-color: var(--color-blue-light);
    background-color: #009AFF;
    color: var(--color-white);
    line-height: 1;
    //border: 2px solid var(--color-blue-light);
    border: 2px solid #009AFF;
    transition: 200ms ease;
    padding: 17px 32px;
    font-weight: 500;
    border-radius: 8px;
    text-transform: uppercase;
    @include adaptive-value("font-size", 16, 12, 1);

    @include breakpointsMaxW($bp-768) {
        padding-top: 15px;
        padding-bottom: 15px;
    }

    &:hover {
        //background-color: var(--color-blue);
        background-color: #0070BA;
        //border: 2px solid var(--color-blue);
        border: 2px solid #0070BA;
        color: #fff;
    }

    &:active {
        transform: scale(0.98);
    }

    &.disabled {
        opacity: 0.3;
        pointer-events: none;
    }

    &__bordered {
        background-color: var(--color-white);
        border: 2px solid rgba(0, 154, 255, 0.6);
        color: var(--color-black);

        &:hover {
            background-color: var(--color-blue);
            border: 2px solid var(--color-blue);
            color: var(--color-white);
        }
    }
}

.main {
    &.mt {
        @include adaptive-value("margin-top", 90, 70, 1);
    }
}

// * Карта
.map {
    iframe {
        width: 100%;
        height: 100%;
        border: 0;
    }
}

.slider_actions {
    display: flex;
    align-items: center;
    z-index: 3;

    &__arrows {
        display: flex;
        width: 112px;
        height: 56px;

        @include breakpointsMaxW($bp-991) {
            display: none;
        }

        .swiper_button_next,
        .swiper_button_prev {
            position: relative;
            width: 50%;
            height: 100%;
            margin-top: 0;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            transition: 200ms ease;
            border: 2px solid rgba(0, 64, 119, 0.2);

            &.swiper-button-disabled {
                opacity: 1;
                pointer-events: all;
            }

            &:hover {
                background-color: var(--color-blue);

                &::after {
                    background-color: var(--color-white);
                }
            }

            &::after {
                @include elDef();
                @include maskImage(url("../assets/images/chevron.svg"), contain);
                width: 24px;
                height: 24px;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
                background-color: var(--color-black);
                transition: 200ms ease;
            }
        }

        .swiper_button_prev {
            border-right: none;
            border-radius: 8px 0 0 8px;
        }

        .swiper_button_next {
            border-radius: 0 8px 8px 0;
            border-left: none;

            &::after {
                transform: translate(-50%, -50%) rotate(180deg);
            }
        }
    }
}

.swiper_pagination {
    position: absolute;
    width: 60px;
    left: initial;
    right: 240px;
    font-weight: 600;
    font-size: 18px;
    line-height: 24px;
    display: flex;
    gap: 16px;
    color: var(--color-text);
    bottom: 15px;

    @include breakpointsMaxW($bp-991) {
        gap: 0;
    }

    .swiper_pagination_current {
        color: var(--color-black);
    }

    @include breakpointsMaxW($bp-768) {
        width: auto;
        bottom: 0;
    }
}

.swiper_pagination_bullet {

    width: 8px;
    height: 8px;
    border: 2px solid #0070BA;
    background-color: transparent;
    opacity: 1;

    &-active {
        background-color: #0070BA;
        //background-color: var(--color-blue-light);
    }
}

.play {
    width: 56px;
    height: 56px;
    position: absolute;
    background-color: #0070BA;
    border: 1px solid #0070BA;
    //background-color: var(--color-blue);
    border-radius: 50%;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 2;

    &::after {
        @include elDef();
        width: 16px;
        height: 16px;
        @include backgroundImage(url("../assets/images/triangle.svg"), contain);
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }

    &--small {
        width: 36px;
        height: 36px;
        background-color: rgba(0, 0, 0, 0.5);

        &:hover {
            background-color: var(--color-blue);
        }

        &::after {
            width: 15px;
            height: 15px;
        }
    }
}

.logo {
    width: 200px;
    height: 50px;

    @include adaptive-value("width", 200, 145, 1);
    @include adaptive-value("height", 50, 35, 1);

    img {
        @include img(contain);
    }
}

.badge {
    width: 32px;
    height: 32px;
    background-color: var(--color-white);
    border-radius: 8px;
  
    &:hover {
      &::after {
        background-color: var(--color-orange);
      }
    }
  
    &::after {
      @include elDef();
      width: 24px;
      height: 24px;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      background-color: var(--color-blue);
    }
  
    &__vk {
      &::after {
        @include maskImage(url("../assets/images/socials/vk.svg"), contain);
      }
    }
  
    &__ok {
      &::after {
        @include maskImage(url("../assets/images/socials/ok.svg"), contain);
      }
    }
  
    &__rutube {
      &::after {
        @include maskImage(url("../assets/images/socials/rutube.svg"), contain);
      }
    }
  
    &__telegram {
      &::after {
        @include maskImage(url("../assets/images/socials/telegram.svg"), contain);
      }
    }
  }
  